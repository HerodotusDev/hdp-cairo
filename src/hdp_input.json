{
  "cairo_run_output_path": "cairo_run_output.json",
  "task_root": "0xfc6af4432778751f9845728c9b9558d6c9b5badb455744b7c2a8c6a532c790c9",
  "result_root": "0x86874987c512d8ca5007eb5590cb9da9c4e8962ffc50b9846618e9c526ffb830",
  "proofs": [
    {
      "chain_id": "0x000000000000534e5f5345504f4c4941",
      "mmr_with_headers": [
        {
          "mmr_meta": {
            "id": 1,
            "root": "0x3101d95c9dd1c45f3b50ce7355970113515bf65f45051695b96fe95e1100214",
            "size": 1552535,
            "peaks": [
              "0x6be91daacfef363375a01c5c5f318bbd4fb206a7da7aeeb410edeae91d3b1f4",
              "0x6dc63def1c8f2330ec73ff7420794a39fa522d9802da5616ad54f5a0ab38ec5",
              "0x42d3fa075877cc90abdfab3a417e5f5faa8fd377d4d769b346f9d5157818f67",
              "0x6a529c60b841c3f64664f3b49001822df82bdce897d573cb2124ad7e9658281",
              "0x1739d0b65e6e25fce2d32344778fe45733556fd3ec30030ba7b89ee14c1dd78",
              "0x3c6de3b1b4fc0666cbe814c0376a5d43c22da924b96efcc073aa7fa47b126a7",
              "0x00b8f52f8d274393b4da40bbcd4b1de5e08f68abb2e3e1a07bfff4ce1de872d",
              "0x7e701495df90cfedc1ca280fbc6c5d8fbecdae328f6064158dff3b400956fec",
              "0x1bc831e2e38d059a82ae2d1539ecc15f6270bcd13444b52145e3e274bdf6e9b"
            ]
          },
          "headers": [
            {
              "fields": [
                "0x535441524b4e45545f424c4f434b5f4841534830",
                "0x25fa3",
                "0x476ce5db235461146bb61052164599953416ee9311f9a8f7efbc5984b3bceed",
                "0x1176a1bd84444c89232ec27754698e5d2e7e1a7f1539f12027f28b23ec9f3d8",
                "0x66d5fa27",
                "0x1000000000000000300000000000000070000000000000000",
                "0x587b45eeb1d8cc406e459d1afe936f1cc665f1d1196eb21646e803625901165",
                "0x3c30a70617e6e1898700578cafbb8f6becfdf150fbcc7fde29a47fe8ddd44c0",
                "0xc8f7f61795903b143358edec3e729725248621bf3ea386bc3c40935713cad6",
                "0x2d053d1642d4646010044b9e0a8acb45bb33a8a565fa0da00cc6b30258d7d18",
                "0x19f12cf7a",
                "0x2ad7545dc686",
                "0x3a051df217",
                "0x5fd0a4b054b66",
                "0x302e31332e32",
                "0x0",
                "0xbf02179065d10f6270cbf46de361d937f3d4535bd991670324e8a3094d94c3"
              ],
              "proof": {
                "leaf_idx": 1414704,
                "mmr_path": [
                  "0x194f8cb66aced72cab474b2df3f9ddb58eac3544a60ccb1b03045ce457acb25",
                  "0x5dcf953e6c22d59ceaed0b1512e0f20c636b50cddebba24c8b4c0c14509a8bb",
                  "0x335ba994fddc83d34cbe1e33a8c318baa6b2f17fc80962e6c2201e3f65d760f",
                  "0x4aa327b80714722d6a8f7175f30fb390071955a18edaf9b1a4fbfa8ef23d425",
                  "0x39a69e3c8bd4101e6f04536ad29b6b8e0bb394920d3b310752938095dbdb9fc",
                  "0x526b883363cf998618b425ef9483724f3ef7c440d0bc6734d12349df80cccac",
                  "0x1ee0776e9bd848668fb3c22490aecd46f08f633055c049a20a2665f511f31dc",
                  "0x6e19587861ba3cec2c482eebb51840de46709e56a651960306be9553069a73a",
                  "0x66fe4f497cee76d4f93f2afe1e8a2506b84c689cade2c2e1674fb8ef8209c18",
                  "0x003b3ae3b62ffd708a6380bdbcf35b28dace4853cfaefec2ace368f85063f0e",
                  "0x5f3f4c85ac9d87774a6630db77dd6650c8e852611f490ccb93a61d4477fb533",
                  "0x57fda60c04c2b36e9887c947ab9e67e4b842e98df749742ac42e2ff20a698c4",
                  "0x0521b17643841eb4c0039abea631cdb60370827b16025aa2f62607350691091",
                  "0x648ecea005b75877c1d80a0a1ab82c9299809b7b1b3bc1a91f4a4977704a0a7",
                  "0x711451b1dd9a6652d86687f9364be3f124dd8deb6325fe46f15df7b35a2944e",
                  "0x5d8055602e5b5f8ec27d985a2791e0667bb4b3a04c48097bd01ee6ea43adc18"
                ]
              }
            }
          ]
        }
      ],
      "storages": []
    }
  ],
  "tasks": [
    {
      "type": "module",
      "context": {
        "encoded_task": [
          "0x599113521b579406",
          "0xd298ed9c1ffab554",
          "0x237f1fb7d3ec6c94",
          "0xa68354b43adea258",
          "0x0",
          "0x0",
          "0x0",
          "0x4000000000000000",
          "0x0",
          "0x0",
          "0x0",
          "0x100000000000000",
          "0x0",
          "0x0",
          "0x0",
          "0xa35f020000000000"
        ],
        "task_bytes_len": 128,
        "inputs": [
          {
            "visibility": "public",
            "value": "0x25fa3"
          }
        ],
        "module_class": {
          "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
          "compiler_version": "2.6.3",
          "bytecode": [
            "0xa0680017fff8000",
            "0x7",
            "0x482680017ffa8000",
            "0x100000000000000000000000000000000",
            "0x400280007ff97fff",
            "0x10780017fff7fff",
            "0xb4",
            "0x4825800180007ffa",
            "0x0",
            "0x400280007ff97fff",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xbc",
            "0x482680017ff98000",
            "0x1",
            "0x20680017fff7ffa",
            "0x9b",
            "0x48307ff880007ff9",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0xa",
            "0x482480017ff78000",
            "0x1",
            "0x48127ff77fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff47fff8000",
            "0x10780017fff7fff",
            "0x8",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x20680017fff7ffe",
            "0x75",
            "0x480080007fff8000",
            "0xa0680017fff8000",
            "0x12",
            "0x4824800180007ffe",
            "0x100000000",
            "0x4844800180008002",
            "0x8000000000000110000000000000000",
            "0x4830800080017ffe",
            "0x480080007ff57fff",
            "0x482480017ffe8000",
            "0xefffffffffffffde00000000ffffffff",
            "0x480080017ff37fff",
            "0x400080027ff27ffb",
            "0x402480017fff7ffb",
            "0xffffffffffffffffffffffffffffffff",
            "0x20680017fff7fff",
            "0x60",
            "0x402780017fff7fff",
            "0x1",
            "0x400080007ff87ffe",
            "0x482480017ffe8000",
            "0xffffffffffffffffffffffff00000000",
            "0x400080017ff77fff",
            "0x482480017ff78000",
            "0x2",
            "0x48307ff880007ff9",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x10",
            "0x40780017fff7fff",
            "0x1",
            "0x480680017fff8000",
            "0x496e70757420746f6f206c6f6e6720666f7220617267756d656e7473",
            "0x400080007ffe7fff",
            "0x48127ffc7fff8000",
            "0x48127fc87fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffa7fff8000",
            "0x482480017ff98000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x1a0",
            "0x482480017fff8000",
            "0x19f",
            "0x480080007fff8000",
            "0xa0680017fff8000",
            "0x9",
            "0x4824800180007fc6",
            "0x3c64",
            "0x482480017fff8000",
            "0x100000000000000000000000000000000",
            "0x400080007ff77fff",
            "0x10780017fff7fff",
            "0x28",
            "0x4824800180007fc6",
            "0x3c64",
            "0x400080007ff87fff",
            "0x482480017ff88000",
            "0x1",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127fea7fff8000",
            "0x48127fea7fff8000",
            "0x480680017fff8000",
            "0xb",
            "0x480680017fff8000",
            "0x534e5f5345504f4c4941",
            "0x48127fee7fff8000",
            "0x1104800180018000",
            "0x10e",
            "0x20680017fff7ffd",
            "0xe",
            "0x40780017fff7fff",
            "0x1",
            "0x400080007fff7ffe",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffb7fff8000",
            "0x482480017ffa8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480680017fff8000",
            "0x4f7574206f6620676173",
            "0x400080007ffe7fff",
            "0x482480017ff58000",
            "0x1",
            "0x48127fc17fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffa7fff8000",
            "0x482480017ff98000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x482480017ff28000",
            "0x3",
            "0x10780017fff7fff",
            "0x5",
            "0x40780017fff7fff",
            "0x8",
            "0x48127ff27fff8000",
            "0x40780017fff7fff",
            "0x1",
            "0x480680017fff8000",
            "0x4661696c656420746f20646573657269616c697a6520706172616d202332",
            "0x400080007ffe7fff",
            "0x48127ffd7fff8000",
            "0x48127fc47fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffa7fff8000",
            "0x482480017ff98000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480680017fff8000",
            "0x4661696c656420746f20646573657269616c697a6520706172616d202331",
            "0x400080007ffe7fff",
            "0x48127ffd7fff8000",
            "0x48127fd27fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffa7fff8000",
            "0x482480017ff98000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480680017fff8000",
            "0x4f7574206f6620676173",
            "0x400080007ffe7fff",
            "0x482680017ff98000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffa7fff8000",
            "0x482480017ff98000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x48297ffc80007ffd",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0xa",
            "0x482680017ffc8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480280007ffc8000",
            "0x10780017fff7fff",
            "0x8",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x20680017fff7ffe",
            "0x29",
            "0x48307ffc80007ffd",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0xa",
            "0x482480017ffb8000",
            "0x1",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480080007ff88000",
            "0x10780017fff7fff",
            "0x8",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x20680017fff7ffe",
            "0xa",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff77fff8000",
            "0x48127ffb7fff8000",
            "0x10780017fff7fff",
            "0x16",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x10780017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0x5",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x20680017fff7ffd",
            "0x60",
            "0x48307ffb80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0xa",
            "0x482480017ffa8000",
            "0x1",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480080007ff78000",
            "0x10780017fff7fff",
            "0x8",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x20680017fff7ffe",
            "0x29",
            "0x48307ffc80007ffd",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0xa",
            "0x482480017ffb8000",
            "0x1",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480080007ff88000",
            "0x10780017fff7fff",
            "0x8",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x20680017fff7ffe",
            "0xa",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff77fff8000",
            "0x48127ffb7fff8000",
            "0x10780017fff7fff",
            "0x16",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x10780017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0x5",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x20680017fff7ffd",
            "0xb",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127fec7fff8000",
            "0x48127fec7fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0xf",
            "0x48127fec7fff8000",
            "0x48127fec7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x0",
            "0xa0680017fff8004",
            "0xe",
            "0x4824800180047ffe",
            "0x800000000000000000000000000000000000000000000000000000000000000",
            "0x484480017ffe8000",
            "0x110000000000000000",
            "0x48307ffe7fff8002",
            "0x480280007ff67ffc",
            "0x480280017ff67ffc",
            "0x402480017ffb7ffd",
            "0xffffffffffffffeeffffffffffffffff",
            "0x400280027ff67ffd",
            "0x10780017fff7fff",
            "0x57",
            "0x484480017fff8001",
            "0x8000000000000000000000000000000",
            "0x48307fff80007ffd",
            "0x480280007ff67ffd",
            "0x480280017ff67ffd",
            "0x402480017ffc7ffe",
            "0xf8000000000000000000000000000000",
            "0x400280027ff67ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x400180007fff7ff9",
            "0x400180017fff7ffa",
            "0x400180027fff7ffc",
            "0x400180037fff7ffd",
            "0x48127fff7fff8000",
            "0x482480017ffe8000",
            "0x4",
            "0x482680017ff68000",
            "0x3",
            "0x480680017fff8000",
            "0x43616c6c436f6e7472616374",
            "0x400280007ff87fff",
            "0x400380017ff87ff7",
            "0x400280027ff87ff5",
            "0x400380037ff87ffb",
            "0x400280047ff87ffc",
            "0x400280057ff87ffd",
            "0x480280077ff88000",
            "0x20680017fff7fff",
            "0x2e",
            "0x480280087ff88000",
            "0x480280097ff88000",
            "0x480680017fff8000",
            "0x0",
            "0x480280067ff88000",
            "0x482680017ff88000",
            "0xa",
            "0x48307ffb80007ffc",
            "0xa0680017fff8000",
            "0x6",
            "0x48307ffe80007ffb",
            "0x400080007ff57fff",
            "0x10780017fff7fff",
            "0x11",
            "0x482480017ffb8000",
            "0x1",
            "0x48307fff80007ffd",
            "0x400080007ff47fff",
            "0x48307ff97ff78000",
            "0x482480017ff38000",
            "0x1",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480680017fff8000",
            "0x0",
            "0x480080007ffa8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480680017fff8000",
            "0x496e646578206f7574206f6620626f756e6473",
            "0x400080007ffe7fff",
            "0x482480017ff38000",
            "0x1",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffa7fff8000",
            "0x482480017ff98000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0xa",
            "0x48127ff37fff8000",
            "0x480280067ff88000",
            "0x482680017ff88000",
            "0xa",
            "0x480680017fff8000",
            "0x1",
            "0x480280087ff88000",
            "0x480280097ff88000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0xd",
            "0x40780017fff7fff",
            "0x1",
            "0x480680017fff8000",
            "0x4f7074696f6e3a3a756e77726170206661696c65642e",
            "0x400080007ffe7fff",
            "0x482680017ff68000",
            "0x3",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x48127ffa7fff8000",
            "0x482480017ff98000",
            "0x1",
            "0x208b7fff7fff7ffe"
          ],
          "bytecode_segment_lengths": [
            200,
            181,
            118
          ],
          "hints": [
            [
              0,
              [
                {
                  "TestLessThanOrEqual": {
                    "lhs": {
                      "Immediate": "0x0"
                    },
                    "rhs": {
                      "Deref": {
                        "register": "FP",
                        "offset": -6
                      }
                    },
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              40,
              [
                {
                  "TestLessThan": {
                    "lhs": {
                      "BinOp": {
                        "op": "Add",
                        "a": {
                          "register": "AP",
                          "offset": -1
                        },
                        "b": {
                          "Immediate": "0x0"
                        }
                      }
                    },
                    "rhs": {
                      "Immediate": "0x100000000"
                    },
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              44,
              [
                {
                  "LinearSplit": {
                    "value": {
                      "Deref": {
                        "register": "AP",
                        "offset": -1
                      }
                    },
                    "scalar": {
                      "Immediate": "0x8000000000000110000000000000000"
                    },
                    "max_x": {
                      "Immediate": "0xfffffffffffffffffffffffffffffffe"
                    },
                    "x": {
                      "register": "AP",
                      "offset": 0
                    },
                    "y": {
                      "register": "AP",
                      "offset": 1
                    }
                  }
                }
              ]
            ],
            [
              69,
              [
                {
                  "AllocSegment": {
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              88,
              [
                {
                  "TestLessThanOrEqual": {
                    "lhs": {
                      "Immediate": "0x3c64"
                    },
                    "rhs": {
                      "Deref": {
                        "register": "AP",
                        "offset": -57
                      }
                    },
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              115,
              [
                {
                  "AllocSegment": {
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              135,
              [
                {
                  "AllocSegment": {
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              157,
              [
                {
                  "AllocSegment": {
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              171,
              [
                {
                  "AllocSegment": {
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              185,
              [
                {
                  "AllocSegment": {
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              383,
              [
                {
                  "TestLessThan": {
                    "lhs": {
                      "Deref": {
                        "register": "AP",
                        "offset": -1
                      }
                    },
                    "rhs": {
                      "Immediate": "0x800000000000000000000000000000000000000000000000000000000000000"
                    },
                    "dst": {
                      "register": "AP",
                      "offset": 4
                    }
                  }
                }
              ]
            ],
            [
              387,
              [
                {
                  "LinearSplit": {
                    "value": {
                      "Deref": {
                        "register": "AP",
                        "offset": 3
                      }
                    },
                    "scalar": {
                      "Immediate": "0x110000000000000000"
                    },
                    "max_x": {
                      "Immediate": "0xffffffffffffffffffffffffffffffff"
                    },
                    "x": {
                      "register": "AP",
                      "offset": -2
                    },
                    "y": {
                      "register": "AP",
                      "offset": -1
                    }
                  }
                }
              ]
            ],
            [
              397,
              [
                {
                  "LinearSplit": {
                    "value": {
                      "Deref": {
                        "register": "AP",
                        "offset": -2
                      }
                    },
                    "scalar": {
                      "Immediate": "0x8000000000000000000000000000000"
                    },
                    "max_x": {
                      "Immediate": "0xffffffffffffffffffffffffffffffff"
                    },
                    "x": {
                      "register": "AP",
                      "offset": -1
                    },
                    "y": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              405,
              [
                {
                  "AllocSegment": {
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              424,
              [
                {
                  "SystemCall": {
                    "system": {
                      "Deref": {
                        "register": "FP",
                        "offset": -8
                      }
                    }
                  }
                }
              ]
            ],
            [
              435,
              [
                {
                  "TestLessThan": {
                    "lhs": {
                      "Deref": {
                        "register": "AP",
                        "offset": -4
                      }
                    },
                    "rhs": {
                      "Deref": {
                        "register": "AP",
                        "offset": -1
                      }
                    },
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              456,
              [
                {
                  "AllocSegment": {
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ],
            [
              484,
              [
                {
                  "AllocSegment": {
                    "dst": {
                      "register": "AP",
                      "offset": 0
                    }
                  }
                }
              ]
            ]
          ],
          "pythonic_hints": [
            [
              0,
              [
                "memory[ap + 0] = 0 <= memory[fp + -6]"
              ]
            ],
            [
              40,
              [
                "memory[ap + 0] = (memory[ap + -1] + 0) % PRIME < 4294967296"
              ]
            ],
            [
              44,
              [
                "\n(value, scalar) = (memory[ap + -1], 10633823966279327296825105735305134080)\nx = min(value // scalar, 340282366920938463463374607431768211454)\ny = value - x * scalar\nmemory[ap + 0] = x\nmemory[ap + 1] = y\n"
              ]
            ],
            [
              69,
              [
                "memory[ap + 0] = segments.add()"
              ]
            ],
            [
              88,
              [
                "memory[ap + 0] = 15460 <= memory[ap + -57]"
              ]
            ],
            [
              115,
              [
                "memory[ap + 0] = segments.add()"
              ]
            ],
            [
              135,
              [
                "memory[ap + 0] = segments.add()"
              ]
            ],
            [
              157,
              [
                "memory[ap + 0] = segments.add()"
              ]
            ],
            [
              171,
              [
                "memory[ap + 0] = segments.add()"
              ]
            ],
            [
              185,
              [
                "memory[ap + 0] = segments.add()"
              ]
            ],
            [
              383,
              [
                "memory[ap + 4] = memory[ap + -1] < 3618502788666131106986593281521497120414687020801267626233049500247285301248"
              ]
            ],
            [
              387,
              [
                "\n(value, scalar) = (memory[ap + 3], 313594649253062377472)\nx = min(value // scalar, 340282366920938463463374607431768211455)\ny = value - x * scalar\nmemory[ap + -2] = x\nmemory[ap + -1] = y\n"
              ]
            ],
            [
              397,
              [
                "\n(value, scalar) = (memory[ap + -2], 10633823966279326983230456482242756608)\nx = min(value // scalar, 340282366920938463463374607431768211455)\ny = value - x * scalar\nmemory[ap + -1] = x\nmemory[ap + 0] = y\n"
              ]
            ],
            [
              405,
              [
                "memory[ap + 0] = segments.add()"
              ]
            ],
            [
              424,
              [
                "syscall_handler.syscall(syscall_ptr=memory[fp + -8])"
              ]
            ],
            [
              435,
              [
                "memory[ap + 0] = memory[ap + -4] < memory[ap + -1]"
              ]
            ],
            [
              456,
              [
                "memory[ap + 0] = segments.add()"
              ]
            ],
            [
              484,
              [
                "memory[ap + 0] = segments.add()"
              ]
            ]
          ],
          "entry_points_by_type": {
            "EXTERNAL": [
              {
                "selector": "0xe2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a7",
                "offset": 0,
                "builtins": [
                  "range_check"
                ]
              }
            ],
            "L1_HANDLER": [],
            "CONSTRUCTOR": []
          }
        }
      }
    }
  ]
}