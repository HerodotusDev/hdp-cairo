name: Build CLI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.version }}
          name: ${{ inputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build_and_upload_compiled_program:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Set up Cairo
        run: make
      
      - name: Build
        run: |
          venv/bin/cairo-compile --cairo_path=packages/eth_essentials src/hdp.cairo --output sound_run_compiled.json --no_debug_info
          venv/bin/cairo-compile --cairo_path=packages/eth_essentials src/contract_bootloader/contract_dry_run.cairo --output dry_run_compiled.json --no_debug_info

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sound_run_compiled.json
          asset_name: sound_run_compiled.json
          tag: ${{ inputs.version }}
          overwrite: true

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dry_run_compiled.json
          asset_name: dry_run_compiled.json
          tag: ${{ inputs.version }}
          overwrite: true

  build_and_upload_cli:
    needs: create_release
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os: ubuntu-24.04
            binary_path: target/release/hdp-cli
            asset_name: hdp-cli-linux-amd64

          - os: ubuntu-24.04-arm
            binary_path: target/release/hdp-cli
            asset_name: hdp-cli-linux-arm64

          - os: macos-13
            binary_path: target/release/hdp-cli
            asset_name: hdp-cli-macos-amd64

          - os: macos-15
            binary_path: target/release/hdp-cli
            asset_name: hdp-cli-macos-arm64

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            ~/.cache/nextest
          key: ${{ runner.os }}-${{ matrix.platform.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Scarb.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform.os }}-cargo-

      - name: Set up Cairo
        run: make
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin hdp-cli

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.platform.binary_path }}
          asset_name: ${{ matrix.platform.asset_name }}
          tag: ${{ inputs.version }}
          overwrite: true

  upload_program_hash_file:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up Cairo
        run: make

      - name: Get Program Hash
        run: |
          hash=$(cargo run --release --bin hdp-cli -- program-hash | tr -d '\n')
          echo "PROGRAM_HASH=$hash" >> $GITHUB_ENV

      - name: Create file with program hash as filename
        run: |
          echo "$PROGRAM_HASH" > "./${PROGRAM_HASH}"

      - name: Upload program hash file to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.PROGRAM_HASH }}
          asset_name: ${{ env.PROGRAM_HASH }}
          tag: ${{ inputs.version }}
          overwrite: true
